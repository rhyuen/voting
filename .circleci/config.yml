version: 2.1
jobs:
      test:
        working_directory: ~/votingishere
        docker:
            - image: circleci/node:12.9.0            
        steps:
            - checkout
            - run:
                  name: update-npm
                  command: "sudo npm install -g npm@latest"
            - restore_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
            - run:
                  name: install-npm-wee
                  command: npm install
            - save_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
                  paths:
                      - ./node_modules           
            - run:
                  name: test
                  command: |                        
                        sudo npm install -g vercel                                               
                        npm run ci:test
            - store_artifacts:
                  path: coverage      
            - store_test_results:
                  path: coverage
      deploy:
            working_directory: ~/votingishere
            docker:
                  - image: circleci/node:12.9.0
            steps:
            - checkout
            - run:
                  name: "update-npm"
                  command: "sudo npm install -g npm@latest"
            - restore_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
            - run:
                  name: install-npm-wee
                  command: npm install
            - save_cache:
                  key: dependency-cache-{{ checksum "package-lock.json" }}
                  paths:
                  - ./node_modules           
            - run:
                  name: deploy
                  command: |
                        sudo npm install -g vercel
                        echo "deploying to production"
                        vercel --token $VERCEL_TOKEN --confirm --prod
workflows:
      version: 2
      test_and_deploy:
            jobs:
                  - test
                  - deploy:
                        requires:
                              - test